"""
Django settings for Iot_platform project.

Generated by 'django-admin startproject' using Django 4.1.8.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
from decouple import config
from pathlib import Path
import os
from django.conf import settings
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from urllib.parse import quote_plus

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-px@tvj#f94l8e6z%^l*^1g+e438a=^cxa^66o3&pbel$_8elyv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['iot-test.krishtec.co.in','www.iot-test.krishtec.co.in']


# Application definition

INSTALLED_APPS = [
   
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Iot_platform_app.apps.IotPlatformAppConfig',
    
    
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Iot_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['TEMPLATES_DIR,'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Iot_platform.wsgi.application'
username = "krishteccbe"
password = "KRISHtec@5747"
escaped_username = quote_plus(username)
escaped_password = quote_plus(password)

connection_string = f"mongodb+srv://{escaped_username}:{escaped_password}@ktcluster.cor4zzm.mongodb.net/retryWrites=true&w=majority"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        
       
        
        "CLIENT": {
            'name':'Iot_platform',
            'host': connection_string,   # Replace with your MongoDB host
            'port': 27017,
            'username': 'krishteccbe',   # Replace with your MongoDB username
            'password': 'KRISHtec@5747',   # Replace with your MongoDB password
            # Replace with the authentication source if needed'AUTH_SOURCE': 'admin', 
            'authMechanism': 'SCRAM-SHA-1', # Use 'MONGODB-CR' if required by your MongoDB setup
        }
        # 'LOGGING': {
        #         'version': 1,
        #         'loggers': {
        #             'djongo': {
        #                 'level': 'DEBUG',
        #                 'propagate': False,                        
        #             }
        #         },
        #      },
         }
    
}
from django.db import connections

# Get a reference to the 'default' database connection
database = connections['default']

# Check if the database connection is defined
if database is not None:
    # Perform database-related operations here
    print("Database connection is defined.")
else:
    print("Database connection is not defined.")


# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'ENFORCE_SCHEMA': True,
#         'NAME': 'Iot_platform',
#         'CLIENT': {
#             'host': os.environ.get(connection_string),
#             'username': '/krishteccbe',
#             'password': 'KRISHtec@5747',
#         }
#     }
# }
#mongodb+srv://krishteccbe:<password>@ktcluster.cor4zzm.mongodb.net/?retryWrites=true&w=majority

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'
 
USE_I18N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

#STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

